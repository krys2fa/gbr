name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-test:
    name: Build, Lint, Typecheck, Test (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        if: ${{ hashFiles('prisma/schema.prisma') != '' }}

      - name: Lint
        run: npm run lint --if-present

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Build
        run: npm run build

      - name: Tests
        run: npm test --if-present

  db-check:
    name: Prisma migration status (optional)
    runs-on: ubuntu-latest
    if: ${{ secrets.DATABASE_URL != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        if: ${{ hashFiles('prisma/schema.prisma') != '' }}

      - name: Validate Prisma schema
        run: npx prisma validate
        if: ${{ hashFiles('prisma/schema.prisma') != '' }}

      - name: Check migration status against DB
        if: ${{ hashFiles('prisma/migrations/**') != '' && secrets.DATABASE_URL != '' }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          npx prisma migrate status --schema prisma/schema.prisma

  vercel-preview:
    name: Vercel Preview (optional)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && secrets.VERCEL_TOKEN != '' && secrets.VERCEL_ORG_ID != '' && secrets.VERCEL_PROJECT_ID != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        if: ${{ hashFiles('prisma/schema.prisma') != '' }}

      - name: Pull Vercel env (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"

      - name: Build with Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel build --token "$VERCEL_TOKEN"

      - name: Deploy preview
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: npx vercel deploy --prebuilt --token "$VERCEL_TOKEN"
